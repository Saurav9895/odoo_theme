<?xml version="1.0" encoding="UTF-8"?>
<odoo>
  <template id="s_product_grid" name="Product Grid">
    <section class="menu-highlight-section pt32 pb32">
      <p class="menu-highlight-tagline">SPECIAL DISHES</p>
      <h2>Standout Dishes<br/>From Our Menu</h2>

      <div class="menu-carousel-wrapper">
        <div class="menu-carousel-arrows">
          <button class="menu-carousel-arrow left">
            <i class="fas fa-chevron-left"></i>
          </button>
          <button class="menu-carousel-arrow right">
            <i class="fas fa-chevron-right"></i>
          </button>
        </div>

        <div class="menu-carousel-container">
          <div class="menu-carousel-inner" id="cardsWrapper">
            <t t-set="website" t-value="request.env['website'].get_current_website()"/>
            <t t-set="pricelist" t-value="website._get_current_pricelist()"/>
            <t t-set="products" t-value="request.env['product.template'].search([('website_published', '=', True)], order='create_date desc', limit=10)"/>

            <t t-foreach="products" t-as="product">
              <a t-att-href="'/shop/product/%s' % product.id" class="menu-card">
                <div class="menu-card-cart"><i class="fas fa-cart-plus"></i></div>
                <t t-if="product.image_1920">
                  <img t-att-src="image_data_uri(product.image_1920)"
                       t-att-alt="product.name"
                       class="menu-card-img"/>
                </t>
                <h3 t-field="product.name"/>
                <p t-esc="product.description_sale[:20] + '...' if product.description_sale else ''"/>
                <div class="menu-card-price-rating">
                  <span class="menu-card-price" t-field="product.list_price"
                        t-options='{"widget": "monetary", "display_currency": pricelist.currency_id}'/>
                  <span class="menu-card-rating">
                ⭐ <t t-esc="round(product.rating_avg, 1) if product.rating_avg else '0.0'"/>
            </span>
                </div>
              </a>
            </t>
          </div>
        </div>
      </div>

      <style>
      .menu-highlight-section {
        max-width: 1200px;
        margin: auto;
        position: relative;
        padding: 20px 40px;
        font-family: "Inter", sans-serif;
      }

      .menu-highlight-tagline {
        color: #a11933;
        font-size: 12px;
        font-weight: 600;
        letter-spacing: 1.5px;
        text-transform: uppercase;
        margin-bottom: 10px;
      }

      h2 {
        font-size: 32px;
        font-weight: 700;
        margin-bottom: 20px;
        line-height: 1.3;
      }

      .menu-carousel-wrapper {
        position: relative;
        /* max-width: 100%; */
      }

      .menu-carousel-container {
        overflow: hidden;
        padding: 40px 0 20px;
        position: relative;
      }

      .menu-carousel-inner {
        display: flex;
        gap: 25px;
        overflow-x: auto;
        scroll-behavior: smooth;
        -webkit-overflow-scrolling: touch;
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE and Edge */
        padding-bottom: 20px;
        padding-top:20px;
      }

      .menu-carousel-inner::-webkit-scrollbar {
        display: none; /* Chrome, Safari and Opera */
      }

      .menu-card {
        min-width: 355px; 
        flex-shrink: 0;
        scroll-snap-align: start;
        background: #fff;
        
        border-radius: 30px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.14);
        padding: 20px;
        position: relative;
        text-align: left;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        cursor: pointer;

      }
      .menu-card:hover {
       transform: translateY(-5px);
      box-shadow: 0 12px 24px rgba(0, 0, 0, 0.18);

      }

      .menu-card-cart {
        position: absolute;
        top: 0;
        right: 0;
        background-color: #721c24;
        color: white;
        padding: 17px;
        border-top-right-radius: 30px;
        border-bottom-left-radius: 35px;
        font-size: 20px;
        cursor: pointer;
        user-select: none;
        transition: transform 0.2s ease, background-color 0.3s ease;
      }

      .menu-card-cart:hover {
        transform: scale(1.1);
      }

      .menu-card-cart.added {
        background-color: #28a745;
        animation: pop 0.3s ease;
      }

      @keyframes pop {
        0% {
          transform: scale(1);
        }
        50% {
          transform: scale(1.3);
        }
        100% {
          transform: scale(1);
        }
      }

      .menu-card-img {
        display: flex;
        margin: 0px auto 15px;
        width: 180px;
        height: 180px;
        object-fit: cover;
        border-radius: 50%;
        border: 4px solid #f5f5f5;
      }

      .menu-card h3 {
        font-size: 18px;
        margin: 10px 0 4px;
        font-weight: 600;
        color: #000;
      }

      .menu-card p {
        font-size: 14px;
        color: #555;
        margin-bottom: 12px;
      }

      .menu-card-price-rating {
        display: flex;
        justify-content: space-between;
        font-weight: 600;
        font-size: 14px;
        margin-top: 10px;
      }

      .menu-card-price,
      .menu-card-rating {
        color: #000;
      }
      .menu-card-price {
        font-size: 18px;
        

      }
       .menu-card-rating {
        display: flex;
        align-items: center;
        gap: 4px;
        color: #000;
        font-weight: 600;
    }

    .menu-card-rating:empty::before {
        content: "⭐ 0.0";
    }

      .menu-carousel-arrows {
        display: flex;
        justify-content: flex-end;
        width: 100%;
        position: absolute;
        top: -19%;
        gap: 10px;
      }

      .menu-carousel-arrow {
        color: #767676;
        border: none;
        font-size: 18px;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;

        background-color: #EFEFEF;
        transition: background-color 0.2s ease, transform 0.1s ease;
      }

      .menu-carousel-arrow:hover {
        color: #fff;
        background-color: #902A42;
      }

      .menu-carousel-arrow:active {
        color: #fff;
        background-color: #902A42;
        transform: scale(0.95);
      }
      .menu-carousel-arrow:visited {
        color: #fff;
        background-color: #902A42;
      }

      .menu-carousel-arrow.left {
        left: 88%;
      }

      .menu-carousel-arrow.right {
        right: 0;
      }

      /* Mobile styles */
      @media (max-width: 400px) {
        .menu-highlight-section {
            padding: 20px 20px 100px; 
        }

          .menu-card {
        min-width: 100%; /* Full width on mobile */
        margin: 0 auto; /* Center the cards */
        padding: 15px; /* Slightly reduced padding for mobile */
    }

        .menu-carousel-arrows {
            position: absolute;
            top: auto;
            bottom: -50px;
            justify-content: center;
            gap: 20px;
            background: transparent;
        }

        .menu-carousel-container {
            overflow: hidden;
            padding: 20px 0;
        }

        .menu-carousel-inner {
            margin: 0;
            padding: 0;
        }
      }
    
      </style>

      <script type="text/javascript">
       <![CDATA[
    document.addEventListener('DOMContentLoaded', function() {
        const cardsWrapper = document.getElementById("cardsWrapper");
        const leftArrow = document.querySelector(".menu-carousel-arrow.left");
        const rightArrow = document.querySelector(".menu-carousel-arrow.right");
        const cardWidth = 360; // card width + gap
        
        function scroll(direction) {
            const scrollAmount = direction * cardWidth;
            cardsWrapper.scrollBy({
                left: scrollAmount,
                behavior: 'smooth'
            });
        }

        rightArrow.addEventListener("click", (e) => {
            e.preventDefault();
            scroll(1); // Scroll right
        });

        leftArrow.addEventListener("click", (e) => {
            e.preventDefault();
            scroll(-1); // Scroll left
        });

        // Optional: Add keyboard navigation
        document.addEventListener('keydown', (e) => {
            if (e.key === 'ArrowLeft') scroll(-1);
            if (e.key === 'ArrowRight') scroll(1);
        });

     // Cart icon functionality
    // Replace the existing Cart icon functionality with this updated version
document.querySelectorAll(".menu-card-cart").forEach((cartIcon) => {
    cartIcon.addEventListener("click", async (e) => {
        e.preventDefault();
        e.stopPropagation();
        
        const icon = cartIcon.querySelector("i");
        const productCard = cartIcon.closest('.menu-card');
        const productId = productCard.href.split('/').pop();
        
        try {
            if (icon.classList.contains("fa-cart-plus")) {
                // Add to cart
                const result = await fetch('/shop/cart/update_json', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        product_id: parseInt(productId),
                        add_qty: 1
                    })
                });
                
                if (result.ok) {
                    cartIcon.classList.add("added");
                    icon.classList.remove("fa-cart-plus");
                    icon.classList.add("fa-shopping-cart");
                    
                    // Optional: Show success message
                    const toast = document.createElement('div');
                    toast.className = 'toast-success';
                    toast.textContent = 'Added to cart!';
                    document.body.appendChild(toast);
                    setTimeout(() => toast.remove(), 2000);
                }
            } else {
                // Remove from cart
                const result = await fetch('/shop/cart/update_json', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        product_id: parseInt(productId),
                        line_id: 0,
                        set_qty: 0
                    })
                });
                
                if (result.ok) {
                    cartIcon.classList.remove("added");
                    icon.classList.remove("fa-shopping-cart");
                    icon.classList.add("fa-cart-plus");
                    
                    // Optional: Show remove message
                    const toast = document.createElement('div');
                    toast.className = 'toast-remove';
                    toast.textContent = 'Removed from cart!';
                    document.body.appendChild(toast);
                    setTimeout(() => toast.remove(), 2000);
                }
            }
        } catch (error) {
            console.error('Error updating cart:', error);
        }
    });
});


        // Optional: Hide arrows when reaching start/end
        cardsWrapper.addEventListener('scroll', () => {
            const isAtStart = cardsWrapper.scrollLeft === 0;
            const isAtEnd = cardsWrapper.scrollLeft + cardsWrapper.clientWidth >= cardsWrapper.scrollWidth;
            
            leftArrow.style.opacity = isAtStart ? '0.5' : '1';
            rightArrow.style.opacity = isAtEnd ? '0.5' : '1';
        });
    });
       ]]>
      </script>
    </section>
  </template>
</odoo>
